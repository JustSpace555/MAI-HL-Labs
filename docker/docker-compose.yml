version: '3.3'

services:
  db-node-1:
    build:
      context: mysql
      dockerfile: Dockerfile
    container_name: db-node-1
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: archdb
      MYSQL_USER: login
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: '1'
    command: >
      --sql-mode='STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION'
      --general-log=ON
      --log-queries-not-using-indexes=ON
    networks:
      - arch-network
    ports:
      - 3360:3306
    volumes:
      - db-node-1-data:/var/lib/mysql

  db-node-2:
    build:
      context: mysql
      dockerfile: Dockerfile
    container_name: db-node-2
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: archdb
      MYSQL_USER: login
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: '1'
    command: >
      --sql-mode='STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION'
      --general-log=ON
      --log-queries-not-using-indexes=ON
    networks:
      - arch-network
    ports:
      - 3361:3306
    volumes:
      - db-node-2-data:/var/lib/mysql

  db-node-3:
    build:
      context: mysql
      dockerfile: Dockerfile
    container_name: db-node-3
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: archdb
      MYSQL_USER: login
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: '1'
    command: >
      --sql-mode='STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION'
      --general-log=ON
      --log-queries-not-using-indexes=ON
    networks:
      - arch-network
    ports:
      - 3362:3306
    volumes:
      - db-node-3-data:/var/lib/mysql

  proxysql:
    build:
      context: proxysql
      dockerfile: Dockerfile
    container_name: proxysql
    command: >
      --initial
    volumes:
      - proxysql-data:/var/lib/proxysql
    healthcheck:
      test: "/usr/bin/mysql --user=login --password=password --execute \"SHOW DATABASES;\""
      timeout: 20s
      retries: 5
    depends_on:
      - db-node-1
      - db-node-2
      - db-node-3

    networks:
      - arch-network
    ports:
      # Mysql Client Port
      - "6033:6033"
      # Mysql Admin Port
      - "6032:6032"

  cache:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning
    networks:
      - arch-network
    volumes:
      - cache:/data

  kafka1:
      image: 'bitnami/kafka:latest'
      container_name: kafka1
      environment:
        KAFKA_ENABLE_KRAFT: "yes"
        KAFKA_CFG_PROCESS_ROLES: "broker,controller"
        KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
        KAFKA_CFG_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093"
        KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
        KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://kafka1:9092"
        KAFKA_BROKER_ID: 1
        KAFKA_CFG_NODE_ID: 1
        KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@kafka1:9093,2@kafka2:9093"
        ALLOW_PLAINTEXT_LISTENER: "yes"
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_KRAFT_CLUSTER_ID: "N2Y2OTlhMTczZDNkNDIwM2"
      volumes:
        - kafka_volume1:/bitnami/kafka
      networks:
        - arch-network

  kafka2:
      image: 'bitnami/kafka:latest'
      container_name: kafka2
      environment:
        KAFKA_ENABLE_KRAFT: "yes"
        KAFKA_CFG_PROCESS_ROLES: "broker,controller"
        KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
        KAFKA_CFG_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093"
        KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
        KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://kafka2:9092"
        KAFKA_BROKER_ID: 2
        KAFKA_CFG_NODE_ID: 2
        KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@kafka1:9093,2@kafka2:9093"
        ALLOW_PLAINTEXT_LISTENER: "yes"
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_KRAFT_CLUSTER_ID: "N2Y2OTlhMTczZDNkNDIwM3"
      volumes:
        - kafka_volume2:/bitnami/kafka
      networks:
        - arch-network

  kafka-ui:
      image: provectuslabs/kafka-ui:v0.4.0
      ports:
        - "8888:8080"
      environment:
        KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: "kafka1:9092,kafka2:9092"
        KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: "localhost:9092"
        KAFKA_CLUSTERS_0_NAME: "social_network"
      networks:
        - arch-network

  social_network:
    build:
      context: social_network
      dockerfile: Dockerfile
    container_name: social_network
    environment:
      - DATABASE_HOST=proxysql
      - DATABASE_PORT=6033
      - DATABASE_LOGIN=login
      - DATABASE_PASSWORD=password
      - DATABASE_DATABASE=archdb
      - CACHE=cache:6379
      - QUEUE_HOST=kafka1:9092
      - QUEUE_TOPIC=service
      - QUEUE_GROUP_ID=0
    ports:
      - 8082:8080
    expose:
      - "8082"
    networks:
      - arch-network
    depends_on:
      - proxysql
      - cache
      - db-node-1
      - db-node-2
      - db-node-3

  writer:
      build:
        context: writer
        dockerfile: Dockerfile
      container_name: writer
      environment:
        - DB_HOST=proxysql
        - DB_PORT=6033
        - DB_LOGIN=login
        - DB_PASSWORD=password
        - DB_DATABASE=archdb
        - CACHE=cache:6379
        - QUEUE_HOST=kafka1:9092
        - QUEUE_TOPIC=service
        - QUEUE_GROUP_ID=0
      networks:
        - arch-network

volumes:
  db-node-1-data:
  db-node-2-data:
  db-node-3-data:
  proxysql-data:
  cache:
  kafka_volume1:
  kafka_volume2:

networks:
  arch-network:
    driver: "bridge"
    external: false
